// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: warpQP.proto

package warpQP

import (
	device "../device"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ReqType int32

const (
	ReqType_LoginReq      ReqType = 0
	ReqType_ComputeReq    ReqType = 1
	ReqType_PasswdReq     ReqType = 2
	ReqType_OSSInfoCheck  ReqType = 3
	ReqType_OSSInfoSubmit ReqType = 4
)

// Enum value maps for ReqType.
var (
	ReqType_name = map[int32]string{
		0: "LoginReq",
		1: "ComputeReq",
		2: "PasswdReq",
		3: "OSSInfoCheck",
		4: "OSSInfoSubmit",
	}
	ReqType_value = map[string]int32{
		"LoginReq":      0,
		"ComputeReq":    1,
		"PasswdReq":     2,
		"OSSInfoCheck":  3,
		"OSSInfoSubmit": 4,
	}
)

func (x ReqType) Enum() *ReqType {
	p := new(ReqType)
	*p = x
	return p
}

func (x ReqType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReqType) Descriptor() protoreflect.EnumDescriptor {
	return file_warpQP_proto_enumTypes[0].Descriptor()
}

func (ReqType) Type() protoreflect.EnumType {
	return &file_warpQP_proto_enumTypes[0]
}

func (x ReqType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReqType.Descriptor instead.
func (ReqType) EnumDescriptor() ([]byte, []int) {
	return file_warpQP_proto_rawDescGZIP(), []int{0}
}

type RespType int32

const (
	RespType_ResultReplyLogin   RespType = 0
	RespType_ResultReplyCompute RespType = 1
	RespType_ResultReplyPasswd  RespType = 2
	RespType_ResultReplyOSS     RespType = 3
)

// Enum value maps for RespType.
var (
	RespType_name = map[int32]string{
		0: "ResultReplyLogin",
		1: "ResultReplyCompute",
		2: "ResultReplyPasswd",
		3: "ResultReplyOSS",
	}
	RespType_value = map[string]int32{
		"ResultReplyLogin":   0,
		"ResultReplyCompute": 1,
		"ResultReplyPasswd":  2,
		"ResultReplyOSS":     3,
	}
)

func (x RespType) Enum() *RespType {
	p := new(RespType)
	*p = x
	return p
}

func (x RespType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RespType) Descriptor() protoreflect.EnumDescriptor {
	return file_warpQP_proto_enumTypes[1].Descriptor()
}

func (RespType) Type() protoreflect.EnumType {
	return &file_warpQP_proto_enumTypes[1]
}

func (x RespType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RespType.Descriptor instead.
func (RespType) EnumDescriptor() ([]byte, []int) {
	return file_warpQP_proto_rawDescGZIP(), []int{1}
}

type WarpReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type ReqType `protobuf:"varint,1,opt,name=type,proto3,enum=warpQP.ReqType" json:"type,omitempty"`
	// Types that are assignable to ReqData:
	//	*WarpReq_OSSTrueReq
	//	*WarpReq_LoginReq
	//	*WarpReq_ComputeReq
	//	*WarpReq_PasswdReq
	//	*WarpReq_OSSInfo
	ReqData isWarpReq_ReqData `protobuf_oneof:"ReqData"`
}

func (x *WarpReq) Reset() {
	*x = WarpReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warpQP_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WarpReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarpReq) ProtoMessage() {}

func (x *WarpReq) ProtoReflect() protoreflect.Message {
	mi := &file_warpQP_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarpReq.ProtoReflect.Descriptor instead.
func (*WarpReq) Descriptor() ([]byte, []int) {
	return file_warpQP_proto_rawDescGZIP(), []int{0}
}

func (x *WarpReq) GetType() ReqType {
	if x != nil {
		return x.Type
	}
	return ReqType_LoginReq
}

func (m *WarpReq) GetReqData() isWarpReq_ReqData {
	if m != nil {
		return m.ReqData
	}
	return nil
}

func (x *WarpReq) GetOSSTrueReq() *device.OSSTrueReq {
	if x, ok := x.GetReqData().(*WarpReq_OSSTrueReq); ok {
		return x.OSSTrueReq
	}
	return nil
}

func (x *WarpReq) GetLoginReq() *device.LoginReq {
	if x, ok := x.GetReqData().(*WarpReq_LoginReq); ok {
		return x.LoginReq
	}
	return nil
}

func (x *WarpReq) GetComputeReq() *device.ComputeReq {
	if x, ok := x.GetReqData().(*WarpReq_ComputeReq); ok {
		return x.ComputeReq
	}
	return nil
}

func (x *WarpReq) GetPasswdReq() *device.PasswdReq {
	if x, ok := x.GetReqData().(*WarpReq_PasswdReq); ok {
		return x.PasswdReq
	}
	return nil
}

func (x *WarpReq) GetOSSInfo() *device.OSSInfo {
	if x, ok := x.GetReqData().(*WarpReq_OSSInfo); ok {
		return x.OSSInfo
	}
	return nil
}

type isWarpReq_ReqData interface {
	isWarpReq_ReqData()
}

type WarpReq_OSSTrueReq struct {
	OSSTrueReq *device.OSSTrueReq `protobuf:"bytes,2,opt,name=oSSTrueReq,proto3,oneof"`
}

type WarpReq_LoginReq struct {
	LoginReq *device.LoginReq `protobuf:"bytes,3,opt,name=loginReq,proto3,oneof"`
}

type WarpReq_ComputeReq struct {
	ComputeReq *device.ComputeReq `protobuf:"bytes,4,opt,name=computeReq,proto3,oneof"`
}

type WarpReq_PasswdReq struct {
	PasswdReq *device.PasswdReq `protobuf:"bytes,5,opt,name=passwdReq,proto3,oneof"`
}

type WarpReq_OSSInfo struct {
	OSSInfo *device.OSSInfo `protobuf:"bytes,6,opt,name=oSSInfo,proto3,oneof"`
}

func (*WarpReq_OSSTrueReq) isWarpReq_ReqData() {}

func (*WarpReq_LoginReq) isWarpReq_ReqData() {}

func (*WarpReq_ComputeReq) isWarpReq_ReqData() {}

func (*WarpReq_PasswdReq) isWarpReq_ReqData() {}

func (*WarpReq_OSSInfo) isWarpReq_ReqData() {}

type WarpResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type RespType `protobuf:"varint,1,opt,name=type,proto3,enum=warpQP.RespType" json:"type,omitempty"`
	// Types that are assignable to RespData:
	//	*WarpResp_ResultReplyOSS
	//	*WarpResp_ResultReplyLogin
	//	*WarpResp_ResultReplyCompute
	//	*WarpResp_ResultReplyPasswd
	RespData isWarpResp_RespData `protobuf_oneof:"RespData"`
}

func (x *WarpResp) Reset() {
	*x = WarpResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_warpQP_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WarpResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarpResp) ProtoMessage() {}

func (x *WarpResp) ProtoReflect() protoreflect.Message {
	mi := &file_warpQP_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarpResp.ProtoReflect.Descriptor instead.
func (*WarpResp) Descriptor() ([]byte, []int) {
	return file_warpQP_proto_rawDescGZIP(), []int{1}
}

func (x *WarpResp) GetType() RespType {
	if x != nil {
		return x.Type
	}
	return RespType_ResultReplyLogin
}

func (m *WarpResp) GetRespData() isWarpResp_RespData {
	if m != nil {
		return m.RespData
	}
	return nil
}

func (x *WarpResp) GetResultReplyOSS() *device.ResultReplyOSS {
	if x, ok := x.GetRespData().(*WarpResp_ResultReplyOSS); ok {
		return x.ResultReplyOSS
	}
	return nil
}

func (x *WarpResp) GetResultReplyLogin() *device.ResultReplyLogin {
	if x, ok := x.GetRespData().(*WarpResp_ResultReplyLogin); ok {
		return x.ResultReplyLogin
	}
	return nil
}

func (x *WarpResp) GetResultReplyCompute() *device.ResultReplyCompute {
	if x, ok := x.GetRespData().(*WarpResp_ResultReplyCompute); ok {
		return x.ResultReplyCompute
	}
	return nil
}

func (x *WarpResp) GetResultReplyPasswd() *device.ResultReplyPasswd {
	if x, ok := x.GetRespData().(*WarpResp_ResultReplyPasswd); ok {
		return x.ResultReplyPasswd
	}
	return nil
}

type isWarpResp_RespData interface {
	isWarpResp_RespData()
}

type WarpResp_ResultReplyOSS struct {
	ResultReplyOSS *device.ResultReplyOSS `protobuf:"bytes,2,opt,name=resultReplyOSS,proto3,oneof"`
}

type WarpResp_ResultReplyLogin struct {
	ResultReplyLogin *device.ResultReplyLogin `protobuf:"bytes,3,opt,name=resultReplyLogin,proto3,oneof"`
}

type WarpResp_ResultReplyCompute struct {
	ResultReplyCompute *device.ResultReplyCompute `protobuf:"bytes,4,opt,name=resultReplyCompute,proto3,oneof"`
}

type WarpResp_ResultReplyPasswd struct {
	ResultReplyPasswd *device.ResultReplyPasswd `protobuf:"bytes,5,opt,name=resultReplyPasswd,proto3,oneof"`
}

func (*WarpResp_ResultReplyOSS) isWarpResp_RespData() {}

func (*WarpResp_ResultReplyLogin) isWarpResp_RespData() {}

func (*WarpResp_ResultReplyCompute) isWarpResp_RespData() {}

func (*WarpResp_ResultReplyPasswd) isWarpResp_RespData() {}

var File_warpQP_proto protoreflect.FileDescriptor

var file_warpQP_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x77, 0x61, 0x72, 0x70, 0x51, 0x50, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x77, 0x61, 0x72, 0x70, 0x51, 0x50, 0x1a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb5, 0x02, 0x0a, 0x07, 0x57, 0x61, 0x72, 0x70, 0x52, 0x65, 0x71,
	0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x77, 0x61, 0x72, 0x70, 0x51, 0x50, 0x2e, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x6f, 0x53, 0x53, 0x54, 0x72, 0x75, 0x65,
	0x52, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x4f, 0x53, 0x53, 0x54, 0x72, 0x75, 0x65, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52,
	0x0a, 0x6f, 0x53, 0x53, 0x54, 0x72, 0x75, 0x65, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x08, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x48,
	0x00, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x0a, 0x63,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x31, 0x0a, 0x09, 0x70, 0x61, 0x73, 0x73, 0x77, 0x64, 0x52, 0x65, 0x71, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x64, 0x52, 0x65, 0x71, 0x48, 0x00, 0x52, 0x09, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x07, 0x6f, 0x53, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4f,
	0x53, 0x53, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x07, 0x6f, 0x53, 0x53, 0x49, 0x6e, 0x66,
	0x6f, 0x42, 0x09, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x22, 0xdf, 0x02, 0x0a,
	0x08, 0x57, 0x61, 0x72, 0x70, 0x52, 0x65, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x77, 0x61, 0x72, 0x70, 0x51, 0x50,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x40, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4f, 0x53,
	0x53, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4f, 0x53, 0x53, 0x48,
	0x00, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4f, 0x53,
	0x53, 0x12, 0x46, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x4c, 0x0a, 0x12, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x48, 0x00, 0x52, 0x12, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x11, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x48, 0x00, 0x52,
	0x11, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x50, 0x61, 0x73, 0x73,
	0x77, 0x64, 0x42, 0x0a, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x2a, 0x5b,
	0x0a, 0x07, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x70, 0x75,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x64, 0x52, 0x65, 0x71, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x4f, 0x53, 0x53, 0x49, 0x6e, 0x66,
	0x6f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x4f, 0x53, 0x53, 0x49,
	0x6e, 0x66, 0x6f, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x10, 0x04, 0x2a, 0x63, 0x0a, 0x08, 0x52,
	0x65, 0x73, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x43, 0x6f, 0x6d, 0x70,
	0x75, 0x74, 0x65, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x50, 0x61, 0x73, 0x73, 0x77, 0x64, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x4f, 0x53, 0x53, 0x10, 0x03,
	0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x77, 0x61, 0x72, 0x70, 0x51, 0x50, 0x3b, 0x77, 0x61, 0x72,
	0x70, 0x51, 0x50, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_warpQP_proto_rawDescOnce sync.Once
	file_warpQP_proto_rawDescData = file_warpQP_proto_rawDesc
)

func file_warpQP_proto_rawDescGZIP() []byte {
	file_warpQP_proto_rawDescOnce.Do(func() {
		file_warpQP_proto_rawDescData = protoimpl.X.CompressGZIP(file_warpQP_proto_rawDescData)
	})
	return file_warpQP_proto_rawDescData
}

var file_warpQP_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_warpQP_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_warpQP_proto_goTypes = []interface{}{
	(ReqType)(0),                      // 0: warpQP.ReqType
	(RespType)(0),                     // 1: warpQP.RespType
	(*WarpReq)(nil),                   // 2: warpQP.WarpReq
	(*WarpResp)(nil),                  // 3: warpQP.WarpResp
	(*device.OSSTrueReq)(nil),         // 4: device.OSSTrueReq
	(*device.LoginReq)(nil),           // 5: device.LoginReq
	(*device.ComputeReq)(nil),         // 6: device.ComputeReq
	(*device.PasswdReq)(nil),          // 7: device.PasswdReq
	(*device.OSSInfo)(nil),            // 8: device.OSSInfo
	(*device.ResultReplyOSS)(nil),     // 9: device.ResultReplyOSS
	(*device.ResultReplyLogin)(nil),   // 10: device.ResultReplyLogin
	(*device.ResultReplyCompute)(nil), // 11: device.ResultReplyCompute
	(*device.ResultReplyPasswd)(nil),  // 12: device.ResultReplyPasswd
}
var file_warpQP_proto_depIdxs = []int32{
	0,  // 0: warpQP.WarpReq.type:type_name -> warpQP.ReqType
	4,  // 1: warpQP.WarpReq.oSSTrueReq:type_name -> device.OSSTrueReq
	5,  // 2: warpQP.WarpReq.loginReq:type_name -> device.LoginReq
	6,  // 3: warpQP.WarpReq.computeReq:type_name -> device.ComputeReq
	7,  // 4: warpQP.WarpReq.passwdReq:type_name -> device.PasswdReq
	8,  // 5: warpQP.WarpReq.oSSInfo:type_name -> device.OSSInfo
	1,  // 6: warpQP.WarpResp.type:type_name -> warpQP.RespType
	9,  // 7: warpQP.WarpResp.resultReplyOSS:type_name -> device.ResultReplyOSS
	10, // 8: warpQP.WarpResp.resultReplyLogin:type_name -> device.ResultReplyLogin
	11, // 9: warpQP.WarpResp.resultReplyCompute:type_name -> device.ResultReplyCompute
	12, // 10: warpQP.WarpResp.resultReplyPasswd:type_name -> device.ResultReplyPasswd
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_warpQP_proto_init() }
func file_warpQP_proto_init() {
	if File_warpQP_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_warpQP_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WarpReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_warpQP_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WarpResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_warpQP_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*WarpReq_OSSTrueReq)(nil),
		(*WarpReq_LoginReq)(nil),
		(*WarpReq_ComputeReq)(nil),
		(*WarpReq_PasswdReq)(nil),
		(*WarpReq_OSSInfo)(nil),
	}
	file_warpQP_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*WarpResp_ResultReplyOSS)(nil),
		(*WarpResp_ResultReplyLogin)(nil),
		(*WarpResp_ResultReplyCompute)(nil),
		(*WarpResp_ResultReplyPasswd)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_warpQP_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_warpQP_proto_goTypes,
		DependencyIndexes: file_warpQP_proto_depIdxs,
		EnumInfos:         file_warpQP_proto_enumTypes,
		MessageInfos:      file_warpQP_proto_msgTypes,
	}.Build()
	File_warpQP_proto = out.File
	file_warpQP_proto_rawDesc = nil
	file_warpQP_proto_goTypes = nil
	file_warpQP_proto_depIdxs = nil
}
